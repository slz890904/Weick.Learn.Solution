在线程池中调用委托
向线程池中放入异步操作
线程池与并行度
实现一个取消选项
在线程池中使用等待事件处理器及超时
使用计时器
使用Background Worker组件



创建线程是昂贵的操作，所以为每个短暂的异步操作创建线程会产生显著的开销。
为了解决该问题，有一个常用的方式叫做池(pooling)。线程池可以成功地适应于任何需要大量短暂的开销大的资源的情形。
我们事先分配一定的资源，将这些资源放入到资源池。每次需要新的资源，只需从池中获取一个，而不用创建一个新的。当该资源不再被使用时,就将其返回到池中。

保持线程中的操作都是短暂的是非常重要的。不要在线程池中放入长时间运行的操:作,或者阻塞工作线程。这将导致所有工作线程变得繁忙，从而无法服务用户操作。这会导致性能问题和非常难以调试的错误。
线程池中的工作线程都是后台线程。这意味着当所有的前台线程(包括主程序线程)完成后,所有的后台线程将停止工作。



