1 Cache和NoSql，Redis原理
2 String
3 Hashtable
4 Set
5 ZSet
6 List
7 分布式异步队列

缓存优化性能，降低负载
1 本地缓存空间有限，也无法共享 所以需要分布式缓存：memcached/redis
2 NoSQL:泛指非关系型数据库，web2.0 网站越来越复杂，流量越来越高  数据量越来越大，数据不再是严格的关系型的
  NoSQL不是严格的面向对象式，类型（key-value hashtable list set）更灵活，
  而且通常用内存管理，速度也更快
  
REDIS： REmote DIctionary Server  远程字典(内存)服务器
基于内存管理(数据全部存在内存)，实现了多种数据结构的，单线程模型的应用程序，提供插入-查询-固化-集群功能

内存管理：速度快，数据可能丢失，只能做缓存，而不是存储
redis有两种固化到硬盘的方式，
snapshot(常用的)，速度快，但是可能丢失一段数据
可以配置一些自动保存策略：1分钟只要有修改就保存  30分钟 修改多少次就保存
save/bgsave 主动save阻塞(单线程)  bgsave非阻塞(子进程)的
AOF：通过日志来恢复数据，任何操作都需要日志，这个效率太低；数据不会丢失；

多种数据结构：string hashtable set zset list  丰富的数据结构带来了灵活性，可以应对特殊的应用场景

单线程：线程安全 web就是多线程  sqlserver多线程 memcached多线程的
        多线程可以提升性能，充分利用硬件资源
        nodejs redis 单线程 
Redis：内存数据结构操作，很长的链表，如果多个线程同时来操作，
       为了保证线程安全，不得不加锁，锁多了之后，多线程没有优势，甚至可能更低
       全部是内存操作，其实一个线程就够快了，
       (单线程的性能极致是要输给多线程的，CPU调度时，同一进程的线程切换肯定切换进程快)
原子性：因为全程只有一个线程可以操作数据，完全没有冲突的概念   
        就是一个不可分割的整体，要么都成功，要么都失败，不会出现中间状态
        
Redis每一个命令都是原子性的

VirtualMemory:Redis会自动把一些冷门数据存到硬盘，可以存储超过内存的数据

Redis--SqlServer(执行脚本  上百个命令)
RDM--SqlServer Client
Ado.Net--ServiceStack/StackExchange(翻译脚本)
ServiceStack：付费的  3000 query per minute(破解版)
StackExchange：免费的

Redis提供很多功能，就是为Web应用服务的



redis下载地址：
https://github.com/dmajkic/redis/downloads 

redis启动:
管理员模式打开控制台(配置成自己的路径)
win10非管理员也可以
E:\practice\Weick.Learn.Doc\Redis\redis-2.4.5-win32-win64\64bit\redis-server.exe E:\practice\Weick.Learn.Doc\Redis\redis-2.4.5-win32-win64\64bit\redis.conf 

可以打开redis-cli.exe尝试使用，
输入：set key value  
结果：OK
输入：get key  
结果：value

redis客户端管理器：redis-desktop-manager-0.8.8.384.exe







NuGet包管理器安装ServiceStack.Redis version="5.9.0" 


redis.config
<?xml version="1.0" encoding="utf-8"?>
<!--<redisconfig WriteServerList="192.168.0.12:6379" ReadServerList="192.168.0.12:6379" MaxWritePoolSize="60" MaxReadPoolSize="60" AutoStart="true" LocalCacheTime="180" RecordeLog="false"></redisconfig>-->
<redisconfig WriteServerList="127.0.0.1:6379" ReadServerList="127.0.0.1:6379" MaxWritePoolSize="60" MaxReadPoolSize="60" AutoStart="true" LocalCacheTime="180" RecordeLog="false"></redisconfig>

app.config
<configSections>
	<section name="redisconfig" type="Redis.Cache.RedisConfigInfo,Redis.Cache" />
</configSections>
<redisconfig configSource="XmlConfig\redis.config" />


StackExchange.Redis
  <appSettings>
    <!--Redis保存的Key前缀，会自动添加到指定的Key名称前-->
    <add key="RedisSysCustomKey" value="Redis_SysKey"/>
    <!--当前连接的Redis中的DataBase索引，默认0-64，可以在service.conf配置，最高64-->
    <add key="RedisDataBaseIndex" value="0"/>
    <!--当前连接的Redis中连接字符串，格式为：127.0.0.1:6379,allowadmin=true,passowrd=pwd-->
    <add key="RedisHostConnection" value="127.0.0.1:6379,allowadmin=true"/>
  </appSettings>